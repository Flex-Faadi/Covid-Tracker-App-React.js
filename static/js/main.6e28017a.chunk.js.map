{"version":3,"sources":["Component/Chart/Chart.module.css","Component/Cards/Cards.module.css","Component/Cards/Crads.jsx","api/index.jsx","Component/Chart/Chart.jsx","Component/CountryPicker/CountryPicker.jsx","Component/Footer.jsx","Component/Header.jsx","Images/Covid19Tracker.png","App.js","reportWebVitals.js","Store/reducer.jsx","Store/index.jsx","index.js","Component/CountryPicker/CountryPicker.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","console","log","className","styles","container","Grid","spacing","justify","style","backgroundColor","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","CircularProgress","url","fetchData","country","a","changableurl","axios","get","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","options","scales","xAxes","gridLines","display","yAxes","BarChart","legend","title","text","CountryPicker","handleCountryChange","fetchedCountires","setFetchedCountires","FormControl","formControl","select","id","defaultValue","onChange","e","target","i","Footer","fontSize","href","rel","Header","borderBottom","borderBottomColor","App","state","setState","this","image","src","coronaImage","alt","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","Reducer","store","createStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e28017a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__32rdS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__Ruwlw\",\"card\":\"Cards_card__16mqL\",\"infected\":\"Cards_infected__3hRSc\",\"recovered\":\"Cards_recovered__1igwa\",\"deaths\":\"Cards_deaths__24wP9\",\"links\":\"Cards_links__WiMA7\",\"btnMyGov\":\"Cards_btnMyGov__13dQc\",\"btnGrid\":\"Cards_btnGrid__1w_4R\"};","import React from \"react\";\r\nimport styles from \"./Cards.module.css\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Grid,\r\n  StylesProvider,\r\n} from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return (\r\n      <div>\r\n      <CircularProgress />\r\n      </div>\r\n    );\r\n  }\r\n  console.log(lastUpdate);\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid\r\n          style={{ backgroundColor: \"rgba(208, 208, 241, 0.5)\" }}\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.infected)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={3}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of active cases of Covid-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid\r\n          style={{ backgroundColor: \"rgba(188, 253, 188, 0.5)\" }}\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={3}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of recoveries from Covid-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid\r\n          style={{ backgroundColor: \"rgba(245, 192, 192, 0.5)\" }}\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.deaths)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={3}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of deaths caused by Covid-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let changableurl = url;\r\n  if (country) {\r\n    changableurl = `${url}/countries/${country}`;\r\n  }\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(changableurl);\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({\r\n      confirmed: confirmed.total,\r\n      deaths: deaths.total,\r\n      date,\r\n    }));\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api/index\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  //this is a set representation with setter method of a state\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = dailyData.length ? (\r\n    <>\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        scales: {\r\n          xAxes: [{ gridLines: { display: false } }],\r\n          yAxes: [{ gridLines: { display: false } }],\r\n        },\r\n      }}\r\n    />\r\n    </>\r\n  ) : null;\r\n\r\n  const BarChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              \"rgba(0, 0, 255, 0.5)\",\r\n              \"rgba(0, 255, 0, 0.5)\",\r\n              \"rgba(255, 0, 0, 0.5)\",\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `current state in ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n  return (\r\n    <div className={styles.container}>{country ? BarChart : lineChart}</div>\r\n  );\r\n    \r\n};\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport styles from \"./CountryPicker.module.css\";\r\nimport { fetchCountries } from \"../../api/index\";\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n  const [fetchedCountires, setFetchedCountires] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setFetchedCountires(await fetchCountries());\r\n    };\r\n    fetchAPI();\r\n  }, [setFetchedCountires]);\r\n  // console.log(fetchedCountires);\r\n  return (\r\n    <FormControl className={styles.formControl} className=\"my-5\">\r\n\r\n        <select className={styles.select} name=\"countries\" id=\"countries\" defaultValue=\"\"\r\n        onChange={(e) => handleCountryChange(e.target.value)}\r\n        variant=\"filled\">\r\n          <option value=\"\">Global</option>\r\n          {fetchedCountires.map((country, i) => {\r\n            return <option key={i} value={country}>{country}</option>;\r\n          })}\r\n        </select>\r\n    </FormControl>\r\n  );\r\n};\r\nexport default CountryPicker;\r\n","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"text-center bg-dark text-white py-1\">\r\n            <p style={{fontSize:\"20px\"}} className=\"text-right mr-4\">DEVELOPED BY <a className=\"text-success\" target=\"_blank\" href=\"https://github.com/Flex-Faadi/\" rel=\"noreferrer\">Muhamad Fahad </a></p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from \"react\";\r\n\r\nfunction Header() {\r\n  return (\r\n      <header\r\n      style={{borderBottom:\"6px solid\",borderBottomColor:\"orange\"}}\r\n      className=\"bg-primary text-center text-light pt-2 text-center\">\r\n        <h2>COVID-19 TRACKER APP</h2>\r\n      </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/Covid19Tracker.53e44b24.png\";","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// import Application from './Component/application'\n// import './Component/styling.css'\nimport { Cards, Chart, CountryPicker, Footer ,Header} from \"./Component\";\nimport { fetchData } from \"./api\";\nimport coronaImage from \"./Images/Covid19Tracker.png\";\nimport styles from \"./App.module.css\";\nimport { useSelector } from \"react-redux\";\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: \"\",\n  };\n  async componentDidMount() {\n    const data = await fetchData();\n    this.setState({ data });\n  }\n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n    this.setState({ data: data, country: country });\n    console.log(country)\n  };\n\n  render() {\n    const { data, country } = this.state;\n    return (\n      <>\n      <Header/>\n        <div className={styles.container}>\n          <img className={styles.image} src={coronaImage} alt=\"Covid-19\" />\n          <Cards data={data} />\n          <CountryPicker handleCountryChange={this.handleCountryChange} />\n          <Chart data={data} country={country} />\n          \n        </div>\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { fetchData } from \"../api\";\nconst data=  fetchData();\nconst INITIAL_STATE = {\n    data:{data}\n}\nconst Reducer = (state = INITIAL_STATE) => {\nreturn state;\n}\n\nexport default Reducer;","import reducer from './reducer';\r\nimport {createStore} from 'redux';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./Store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2xq0X\",\"select\":\"CountryPicker_select__2dVB9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__28GoV\",\"image\":\"App_image__10fR8\"};"],"sourceRoot":""}